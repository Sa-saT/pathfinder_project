# Pathfinder Audio App - Cursor Rules

## Project Overview (プロジェクト概要)
- Nuxt4 + Vercel Blob + PostgreSQL Audio Application
- Authentication: JWT + bcrypt
- State Management: Pinia + sessionStorage
- Database: Direct DDL execution (No ORM)
- File Storage: Local for development, Vercel Blob for production

## Tech Stack (技術スタック)
- **Frontend**: Nuxt 4, Vue 3, TypeScript, Pinia
- **Backend**: Nuxt Nitro, Node.js
- **Database**: PostgreSQL
- **Storage**: Vercel Blob (production), Local filesystem (development)
- **Authentication**: JWT, bcrypt
- **Package Manager**: pnpm

## Coding Standards (コーディング規約)
- Strict TypeScript mode
- Vue 3 Composition API
- Follow Nuxt 4 conventions
- Japanese comments recommended (日本語コメント推奨)
- Implement proper error handling

## File Structure (ファイル構造)
- `app/`: Frontend (Vue, Pinia, pages, components)
- `server/`: Backend (API, middleware, utilities)
- `database/`: SQL schemas and initialization scripts
- `storage/`: Local development file storage (uploads, thumbnails)
- `public/`: Static files

## Naming Conventions (命名規則)
- Components: PascalCase (e.g., AuthForm.vue)
- Files: kebab-case (e.g., auth-form.vue)
- Functions: camelCase (e.g., handleAuthSuccess)
- Constants: UPPER_SNAKE_CASE (e.g., JWT_SECRET)
- Database tables: snake_case (e.g., login_accounts)

## API Design Principles (API設計原則)
- RESTful API design
- Appropriate HTTP status codes
- Unified error responses
- Proper JWT authentication implementation

## State Management (状態管理)
- Use Pinia stores
- Persist state across page reloads with sessionStorage
- Place stores in `app/stores/` directory

## Security (セキュリティ)
- Hash passwords with bcrypt
- Proper JWT token management
- Validate file uploads
- Prevent SQL injection

## Development Environment (開発環境)
- Use `storage/` directory for local development
- Use Vercel Blob for production
- Manage environment variables with `.env`
- Database connection via `runtimeConfig`

## Testing and Debugging (テストとデバッグ)
- Start dev server: `pnpm dev`
- Initialize database: `psql -d pathfinder -f database/init.sql`
- Output appropriate logs
- Implement detailed error handling

## Key Implementation Notes (重要な実装注意点)
- Store files are located in `app/stores/` (not root `stores/`)
- Local file uploads use `/api/sounds/upload-local` endpoint
- Vercel Blob uploads use `/api/sounds/upload-url` endpoint
- JWT tokens are stored in cookies for authentication
- File paths use relative imports in server API files
